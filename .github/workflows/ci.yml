name: CI

on:
  push:
    branches: [main]
  pull_request:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

defaults:
  run:
    shell: bash

env:
  CMAKE_BUILD_PARALLEL_LEVEL: 3
  CTEST_PARALLEL_LEVEL: 3

jobs:
  cpp-tests:
    name: Tests ${{ matrix.config.os }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
          - { os: ubuntu-latest, toolchain: "" }
          - { os: macos-latest, toolchain: "" }
          - { os: windows-latest, toolchain: "-T ClangCl" }
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Configure CMake
        run: cmake -S . -B build -DCMAKE_BUILD_TYPE=Release -DBUILD_DD_PACKAGE_TESTS=ON ${{ matrix.config.toolchain }}
      - name: Build
        run: cmake --build build --config Release
      - name: Test
        run: ctest -C Release --output-on-failure --test-dir build --repeat until-pass:3 --timeout 300
      - if: runner.os == 'Linux'
        name: Coverage
        run: |
          cmake -S . -B buildCov -DCMAKE_BUILD_TYPE=Debug -DBUILD_DD_PACKAGE_TESTS=ON -DENABLE_COVERAGE=ON
          cmake --build buildCov --config Debug
          ctest -C Debug --output-on-failure --test-dir buildCov --repeat until-pass:3 --timeout 300
      - if: runner.os == 'Linux'
        name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3.1.4
        with:
          fail_ci_if_error: true
          gcov: true
          gcov_ignore: "extern/**/*"
          token: ${{ secrets.CODECOV_TOKEN }}

  benchmark:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Configure CMake
        run: cmake -S . -B build -DCMAKE_BUILD_TYPE=Release -DBUILD_DD_PACKAGE_TESTS=ON
      - name: Build
        run: cmake --build build --config Release --target DDPackage_bench
      - name: Run Benchmarks
        working-directory: build
        run: ./test/DDPackage_bench --benchmark_format=json | tee benchmark_result.json
      - name: Store benchmark result # for pushes
        if: github.event.pull_request.head.repo.fork == false && github.actor != 'dependabot[bot]'
        uses: rhysd/github-action-benchmark@v1
        #        if: github.event_name == 'push'
        with:
          # What benchmark tool the output.txt came from
          tool: "googlecpp"
          # Where the output from the benchmark tool is stored
          output-file-path: build/benchmark_result.json
          # Workflow will fail when an alert happens
          fail-on-alert: true
          # GitHub API token to make a commit comment
          github-token: ${{ secrets.GITHUB_TOKEN }}
          # Enable alert commit comment
          comment-on-alert: true
          # Set alert threshold
          alert-threshold: 500%
          # Mention @burgholzer in the commit comment
          alert-comment-cc-users: "@burgholzer"
          # Push and deploy GitHub pages branch automatically
          auto-push: true
